generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserState {
  ACTIVE
  SUSPENDED
  DELETED
}

enum UserRole {
  USER
  ADMIN
  SUPER_ADMIN
}

enum SubjectState {
  ACTIVE
  SUSPENDED
  DELETED
}

enum AdSubjectState {
  ACTIVE
  SUSPENDED
  DELETED
}

enum UserAdState {
  ACTIVE
  DONE
  PENDDING
  INACTIVE
}

model User {
  id         String    @id @default(uuid()) @db.Uuid
  name       String
  email      String    @unique
  password   String 
  cpf        String    @unique
  ra         String    @unique
  role       UserRole  @default(USER)
  created_at DateTime  @default(now())
  update_at  DateTime  @updatedAt 
  delete_at  DateTime? 
  status     UserState @default(ACTIVE)
  userAd     UserAd[]

  @@index([id, name])
  @@map("users")
}

model Subject {
  id         String       @id @default(uuid()) @db.Uuid
  name       String
  created_at DateTime     @default(now())
  update_at  DateTime     @updatedAt
  deleted_at DateTime?    
  status     SubjectState @default(ACTIVE)
  userAd     UserAd[]

  @@index([id, name])
  @@map("subjects")
}

model Ad {
  id         String         @id @default(uuid()) @db.Uuid
  name       String
  weekDay    DateTime
  hourStart  DateTime
  hourEnd    DateTime
  useVoice   Boolean
  useVideo   Boolean
  status     AdSubjectState @default(ACTIVE)
  created_at DateTime       @default(now()) 
  update_at  DateTime       @updatedAt
  deleted_at DateTime?     
  userAd     UserAd[]

  @@index([id, name])
  @@map("ads")
}

model UserAd {
  id         String      @id @default(uuid()) @db.Uuid
  user_id    String      @db.Uuid
  ad_id      String      @db.Uuid
  subject_id String      @db.Uuid
  created_at DateTime    @default(now()) @db.Timestamp(3)
  update_at  DateTime    @db.Timestamp(3)
  deleted_at DateTime?   @db.Timestamp(3)
  status     UserAdState @default(ACTIVE)

  user    User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  ad      Ad      @relation(fields: [ad_id], references: [id], onDelete: Cascade)
  subject Subject @relation(fields: [subject_id], references: [id], onDelete: Cascade)

  @@index([user_id, subject_id, ad_id])
  @@map("usersAds")
}
